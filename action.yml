name: "Publish To Registry"
description: "Publish Custom Nodes to Registry."
inputs:
  personal_access_token:
    description: "Personal Access Token for authenticating to the Registry"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout Custom Node Repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      shell: bash
      run: |
        pip install comfy-cli ruff
        
    - name: Run security linting
      shell: bash
      run: |
        ruff check . --select=S102,S307 --target-version=py310 --exit-zero | tee ruff_output.txt
        
    # TODO(yoland): add a link policy page for comfy org
    - name: Create or update issue if problems found
      if: success()
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        if [ -s ruff_output.txt ]; then
          # Search for existing issue with the title
          ISSUE_NUMBER=$(gh issue list --search "Comfy Registry Security Review Required: eval/exec usage detected" --json number --jq '.[0].number')
          
          # Prepare the comment body
          COMMENT_BODY=$'# New Security Findings\n\nThe following potentially dangerous code patterns were found:\n```text\n'"$(cat ruff_output.txt)"$'\n```\nPlease review these instances of `eval()` and `exec()` calls as they may pose security risks.'
          
          if [ -n "$ISSUE_NUMBER" ]; then
            # If issue exists, add a comment
            gh issue comment $ISSUE_NUMBER --body "$COMMENT_BODY"
          else
            # If no issue exists, create a new one
            gh issue create \
              --title "Comfy Registry Security Review Required: eval/exec usage detected" \
              --body "$COMMENT_BODY"
          fi
        fi
        
    - name: Publish Node
      shell: bash
      run: |
        comfy --skip-prompt --no-enable-telemetry env
        comfy node publish --token ${{ inputs.personal_access_token }}